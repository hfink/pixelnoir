The following is a description of the ./player folder contents and their
purpose.

./asset
    Contains *.rtr files which have been generated by the collada_bakery
    subproject (see ../collada_bakery).

./audio
    Contains audio files which might be used for background music playback.

./ide
    Contains VS2010-native projects. You should open the *.sln under 
    ../ide/VS2010/solution.sln directly.

./material_shaders
    Contains so-called 'material shaders'. These are GLSL files modeling the
    specifics of a material. Therefore, in order to add a new material, you 
    will only have to implement a few methods. The lighting loop is taken care
    of by the shader system of the renderer. Therefore this folder contains 
    'user'-data in the scene of shader authors.

./materials
    Contains XML files describing material overrides. You can use the python 
    script ../tools/material_bakery.py, if you need to set certain parameters
    of specific materials manually, which could not have been set by the 
    collada bakery (e.g. if some parameters were not transported by the
    COLLADA model).

./shaders
    Contains renderer-specific shader files, including post-processing effects
    such as depth-of-field.

./src
    Contains all C++ source files. There are a few special files in this
    folder:
        ./src/config.xml
            Describes the configurable parameters for the player. This file is
            used the generate the config C++ source code. Note that the SCons
            build process is automatically taking care of that by calling
            ../tool/configGen.py.

        ./src/extensions.txt
            This file allows you to easily set the required OpenGL version of
            your context (compatible, core, debug,...) and allows to request
            the player to load certain extensions (which could be either 
            optional or required). This file is also used for code generation,
            SCons build process automatically takes care of that by executing
            ../tool/extensionGen.py. Once the sources are generated, you can
            check the availability of extension simply by C++ constants.

./textures
    Default textures for diffuse, specular and normal maps. These are used
    as fallbacks or as placeholder if a channel is not used, but the material
    requires a texture to be set.

./SConscript
    The scons script of the player.


